[{"/Users/andrijnalivajko/Desktop/Forward/trener/client/src/index.tsx":"1","/Users/andrijnalivajko/Desktop/Forward/trener/client/src/App.tsx":"2","/Users/andrijnalivajko/Desktop/Forward/trener/client/src/components/helpers/SelectCity.tsx":"3","/Users/andrijnalivajko/Desktop/Forward/trener/client/src/components/helpers/SelectLanguage.tsx":"4","/Users/andrijnalivajko/Desktop/Forward/trener/client/src/components/footer/Footer.tsx":"5","/Users/andrijnalivajko/Desktop/Forward/trener/client/src/components/header/Header.tsx":"6"},{"size":198,"mtime":1636964633391,"results":"7","hashOfConfig":"8"},{"size":34085,"mtime":1636980610580,"results":"9","hashOfConfig":"8"},{"size":195,"mtime":1636919541188,"results":"10","hashOfConfig":"8"},{"size":178,"mtime":1636968417014,"results":"11","hashOfConfig":"8"},{"size":2781,"mtime":1636985824814,"results":"12","hashOfConfig":"8"},{"size":1484,"mtime":1636986177373,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"o5qh3r",{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"21"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/andrijnalivajko/Desktop/Forward/trener/client/src/index.tsx",[],"/Users/andrijnalivajko/Desktop/Forward/trener/client/src/App.tsx",["29"],"/Users/andrijnalivajko/Desktop/Forward/trener/client/src/components/helpers/SelectCity.tsx",["30"],"import React from 'react';\n\ntype Props = {\n  setChoicedCity: any;\n};\n\nexport const SelectCity: React.FC<Props> = ({ setChoicedCity }) => {\n  console.log(setChoicedCity);\n  return <div></div>;\n};\n",["31","32"],"/Users/andrijnalivajko/Desktop/Forward/trener/client/src/components/helpers/SelectLanguage.tsx",["33","34"],"import React from 'react';\n\ntype Props = {\n  setSelectedLanguage: any;\n};\n\nexport const SelectLanguage: React.FC<Props> = ({ setSelectedLanguage }) => {\n  return <div></div>;\n};\n","/Users/andrijnalivajko/Desktop/Forward/trener/client/src/components/footer/Footer.tsx",[],"/Users/andrijnalivajko/Desktop/Forward/trener/client/src/components/header/Header.tsx",[],{"ruleId":"35","severity":1,"message":"36","line":6,"column":13,"nodeType":"37","messageId":"38","endLine":6,"endColumn":18},{"ruleId":"39","severity":1,"message":"40","line":4,"column":19,"nodeType":"41","messageId":"42","endLine":4,"endColumn":22,"suggestions":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"39","severity":1,"message":"40","line":4,"column":24,"nodeType":"41","messageId":"42","endLine":4,"endColumn":27,"suggestions":"48"},{"ruleId":"49","severity":1,"message":"50","line":7,"column":51,"nodeType":"51","messageId":"52","endLine":7,"endColumn":70},"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["53","54"],"valid-jsdoc",[],"require-jsdoc",[],["55","56"],"@typescript-eslint/no-unused-vars","'setSelectedLanguage' is defined but never used.","Identifier","unusedVar",{"messageId":"57","fix":"58","desc":"59"},{"messageId":"60","fix":"61","desc":"62"},{"messageId":"57","fix":"63","desc":"59"},{"messageId":"60","fix":"64","desc":"62"},"suggestUnknown",{"range":"65","text":"66"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"65","text":"67"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"68","text":"66"},{"range":"68","text":"67"},[61,64],"unknown","never",[66,69]]